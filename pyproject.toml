[tool.poetry]
name = "abstop"
version = "0.0.1"
description = ""
authors = [
    "Tariq Dam <t.dam@amsterdamumc.nl>",
    "Lucas Fleuren <l.fleuren@erasmusmc.nl>"
]
maintainers = [
    "Tariq Dam <t.dam@amsterdamumc.nl>"
]
license = "MIT"
#packages = [
#    { include = "tadam", from = ".." },
#]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.25.2"
pandas = "2.0.2"
joblib = "^1.3.2"
seaborn = "^0.12.2"
tadam = { path="../tadam", develop=true }
duckdb = "^0.8.1"
scikit-learn = "^1.4.0"
xgboost = "^2.0.1"
imbalanced-learn = "^0.11.0"
tableone = "^0.8.0"
lightgbm = "^4.1.0"
shap = "^0.44.1"
matplotlib= "3.7.3"
graphviz = "^0.20.3"
pypdf = "^4.3.1"
optuna = "^3.6.1"
optuna-dashboard = "^0.15.1"
psycopg2 = "^2.9.9"
sqlalchemy = "^2.0.32"

[tool.poetry.group.lint.dependencies]
black = "~23.7.0"
flake8 = "~6.1.0"
isort = "~5.12.0"
mypy = "~1.5.1"
pre-commit = "~2.17.0"
pydantic = "~1.10.7"
pydocstyle = "~6.3.0"
types-PyYAML = "~6.0.12.1"
ruff = "~0.0.287"

[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
notebook = "^7.0.0"

[tool.poetry.group.test.dependencies]
coverage = { version = "^7.2.3", extras = ["toml"] }
pytest = "^7.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = false
source = ["abstop/"]
omit = ["*/tests/*", "setup.py"]

[tool.coverage.report]
fail_under = 100
ignore_errors = false
show_missing = true
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "AbstractMethodError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Verbose wrappers
    "if verbose",
    "if plot",
    "if show",
    # Mypyp
    "if TYPE_CHECKING",

    # abstract methods
    "@abstractmethod",
]


[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = 'black'

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
python_version = '3.11'
exclude = ['^tests/.']
explicit_package_bases = true
namespace_packages = true
plugins = ["pydantic.mypy"]

[tool.pydocstyle]
ignore = "D100, D104, D107, D202, D203, D213, D400, D413, D415"
match_dir = '^(abstop)'

[tool.ruff]
line-length = 88